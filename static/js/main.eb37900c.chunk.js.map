{"version":3,"sources":["components/DecorContainer/DecorContainer.js","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/DecorContainer/DecorContainer.module.css","components/ContactsList/ContactsList.module.css"],"names":["DecorContainer","title","children","className","s","decor","leftDecor","rightDecor","circleDecor","innerDecor","titleDecor","ADD","createAction","name","tel","payload","id","uuidv4","DELETE","FILTER","UNIQNAME","ContactForm","useState","setName","setTel","contacts","useSelector","state","dispatch","useDispatch","reset","onSubmit","e","preventDefault","find","contact","toLowerCase","alert","actions","onCheckforUniqName","telephone","arr","split","formatNumber","onAdd","autoComplete","type","value","placeholder","onChange","target","pattern","minLength","maxLength","ContactsList","filteredContacts","filter","includes","length","text","contactsList","map","phone","href","toString","replace","btnDeleteContact","onClick","onDeleteContact","Filter","App","createReducer","_","action","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","contactReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.eb37900c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './DecorContainer.module.css';\n\nfunction DecorContainer({ title, children }) {\n  return (\n    <>\n      <section className={s.decor}>\n        {/* <div className={s.decor}> */}\n        <div className={s.leftDecor}></div>\n        <div className={s.rightDecor}></div>\n        <div className={s.circleDecor}></div>\n        <div className={s.innerDecor}>\n          <h3 className={s.titleDecor}>{title}</h3>\n          {children}\n        </div>\n        {/* </div> */}\n      </section>\n    </>\n  );\n}\n\nDecorContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.arrayOf(PropTypes.node),\n};\n\nexport default DecorContainer;\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst onAddContactsPayload = (name, tel) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    tel,\n  },\n});\n\nconst ADD = createAction('contacts/add', onAddContactsPayload);\nconst DELETE = createAction('contacts/delete');\nconst FILTER = createAction('contacts/filter');\nconst UNIQNAME = createAction('contacts/uniqName');\n\nexport default { ADD, DELETE, FILTER, UNIQNAME };\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [tel, setTel] = useState('');\n  const contacts = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const handleChangeTel = e => {\n    setTel(e.target.value);\n  };\n\n  const onAdd = (name, tel) => dispatch(actions.ADD(name, tel));\n\n  const onCheckforUniqName = name => {\n    const uniqName = !!contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (uniqName) {\n      alert(`${name} is already in contacts`);\n      reset();\n      return false;\n    }\n    if (!(name && tel)) {\n      alert('Empty field');\n      return false;\n    }\n\n    return dispatch(actions.UNIQNAME(name));\n  };\n\n  const formatNumber = tel => {\n    const arr = tel.split('');\n    return `+38 (${arr[0]}${arr[1]}${arr[2]}) ${arr[3]}${arr[4]}${arr[5]}-${arr[6]}${arr[7]}-${arr[8]}${arr[9]}`;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const checkUniqName = onCheckforUniqName(name);\n    if (!checkUniqName) return;\n\n    const telephone = formatNumber(tel);\n    onAdd(name, telephone);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setTel('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Введите имя\"\n          onChange={handleChangeName}\n        />\n        <input\n          type=\"tel\"\n          name=\"tel\"\n          value={tel}\n          pattern=\"[0-9]{10}\"\n          placeholder=\"067 123 45 67\"\n          minLength=\"10\"\n          maxLength=\"10\"\n          onChange={handleChangeTel}\n        />\n        <input type=\"submit\" value=\"Сохранить контакт\" />\n      </form>\n    </>\n  );\n}\n\nContactForm.propTypes = {\n  onAdd: PropTypes.func,\n  onCheckforUniqName: PropTypes.func,\n};\n\nexport default ContactForm;\n\n// const mapStateToProps = state => {\n//   return {\n//     contacts: state.contacts,\n//   };\n// };\n\n// const mapDispatchToProps = dispatch => ({\n//   onAdd: (name, tel) => dispatch(actions.ADD(name, tel)),\n//   onCheckforUniqName: name => dispatch(actions.UNIQNAME(name)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\n\nfunction ContactsList({ title }) {\n  const filteredContacts = useSelector(state =>\n    state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(state.filter.toLowerCase()),\n    ),\n  );\n\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(actions.DELETE(id));\n\n  return (\n    <>\n      {filteredContacts.length < 1 && <p className={s.text}>Нет контактов</p>}\n\n      <ul className={s.contactsList}>\n        {filteredContacts.length > 0 &&\n          filteredContacts.map(({ id, name, tel }) => (\n            <li key={id} className={s.contact}>\n              <span className={s.name}>{name}</span>\n              <span className={s.phone}>\n                <a href={`tel:+${tel.toString().replace(/[^\\d;]/g, '')}`}>\n                  {tel}\n                </a>\n              </span>\n              <button\n                className={s.btnDeleteContact}\n                type=\"button\"\n                onClick={() => onDeleteContact(id)}\n              >\n                x\n              </button>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n}\n\nContactsList.propTypes = {\n  title: PropTypes.string,\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactsList;\n\n// const getFilteredContacts = (allContacts, filter) => {\n//   const normalizeFilter = filter.toLowerCase();\n\n//   return allContacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizeFilter),\n//   );\n// };\n\n// const mapStateToProps = state => ({\n//   filteredContacts: getFilteredContacts(state.contacts, state.filter),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onDeleteContact: id => dispatch(actions.DELETE(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const onFilter = e => dispatch(actions.FILTER(e.target.value));\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Поиск по имени ...\"\n        onChange={onFilter}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onFilter: PropTypes.func,\n};\n\nexport default Filter;\n\n// const mapStateToProps = state => ({\n//   filter: state.filter,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onFilter: e => dispatch(actions.FILTER(e.target.value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import DecorContainer from './components/DecorContainer';\nimport ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\n\nfunction App() {\n  return (\n    <>\n      <DecorContainer title={'Телефонная книга'}>\n        <ContactForm />\n      </DecorContainer>\n      <DecorContainer title=\"Список контактов\">\n        <Filter />\n        <ContactsList />\n      </DecorContainer>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst initialState = [\n  { id: 1, name: 'Вася', tel: 111 },\n  { id: 2, name: 'Ваня', tel: 222 },\n  { id: 3, name: 'Петя', tel: 333 },\n];\n\nconst contacts = createReducer(initialState, {\n  [actions.ADD]: (state, { payload }) => [...state, payload],\n  [actions.DELETE]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n  [actions.UNIQNAME]: state => state,\n});\n\nconst filter = createReducer('', {\n  [actions.FILTER]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import contactReducer from './contacts/contacts-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter', '_persist'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, contactReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"decor\":\"DecorContainer_decor__Rsagc\",\"leftDecor\":\"DecorContainer_leftDecor__9cw2M\",\"rightDecor\":\"DecorContainer_rightDecor__r5HnV\",\"circleDecor\":\"DecorContainer_circleDecor__2v_g5\",\"innerDecor\":\"DecorContainer_innerDecor__18VSk\",\"titleDecor\":\"DecorContainer_titleDecor__3xiSx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactsList_text__338KT\",\"contactsList\":\"ContactsList_contactsList__2--9f\",\"contact\":\"ContactsList_contact__12lPh\",\"name\":\"ContactsList_name__3uQOi\",\"phone\":\"ContactsList_phone__2wPg-\",\"btnDeleteContact\":\"ContactsList_btnDeleteContact__EiF1M\"};"],"sourceRoot":""}